#include "imports/stdlib.fc";

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {

}

int custom::equal_slices(slice a, slice b) asm "SDEQ";
int tlen(tuple t) asm "TLEN";

;; X    Q    L   maze
(int, int, int, tuple) solve(int n, int m, tuple maze) method_id {
    (int si, int sj) = (0, 0);
    (int ei, int ej) = (0, 0);
    int i = 0;
    n = tlen(maze);
    m = tlen(maze.at(0));
    repeat (n) {
        int j = 0;
        repeat (m) {
            if (custom::equal_slices(maze.at(i).at(j), "S")) {
                (si, sj) = (i, j);
            } elseif (custom::equal_slices(maze.at(i).at(j), "E")) {
                (ei, ej) = (i, j);
            }
            j += 1;
        }
        i += 1;
    }
    if (i + si + sj + ei + ej < 0) {
        return (0, 0, 0, null());
    }
    return (-1, 0, 0, null());
}
